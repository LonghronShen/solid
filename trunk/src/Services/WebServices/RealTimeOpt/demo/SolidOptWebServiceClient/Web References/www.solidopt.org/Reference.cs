//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3603
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SolidOptWebServiceClient.www.solidopt.org
{
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("SharpDevelop", "3.0.0.3800")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="SolidOptServiceSoap", Namespace="http://www.solidopt.org/ws/SolidOptService.asmx")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransformMethod[]))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfigParamDef[]))]
    public partial class SolidOptService : System.Web.Services.Protocols.SoapHttpClientProtocol
    {
        
        /// <remarks/>
        public SolidOptService()
        {
            this.Url = "http://www.solidopt.org/ws/SolidOptService.asmx";
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.solidopt.org/ws/SolidOptService.asmx/Login", RequestNamespace="http://www.solidopt.org/ws/SolidOptService.asmx", ResponseNamespace="http://www.solidopt.org/ws/SolidOptService.asmx", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Login(string userName, string password)
        {
            object[] results = this.Invoke("Login", new object[] {
                        userName,
                        password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLogin(string userName, string password, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("Login", new object[] {
                        userName,
                        password}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndLogin(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.solidopt.org/ws/SolidOptService.asmx/Logout", RequestNamespace="http://www.solidopt.org/ws/SolidOptService.asmx", ResponseNamespace="http://www.solidopt.org/ws/SolidOptService.asmx", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Logout()
        {
            this.Invoke("Logout", new object[0]);
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLogout(System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("Logout", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public void EndLogout(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.solidopt.org/ws/SolidOptService.asmx/GetTransformMethods", RequestNamespace="http://www.solidopt.org/ws/SolidOptService.asmx", ResponseNamespace="http://www.solidopt.org/ws/SolidOptService.asmx", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public TransformMethod[] GetTransformMethods()
        {
            object[] results = this.Invoke("GetTransformMethods", new object[0]);
            return ((TransformMethod[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetTransformMethods(System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetTransformMethods", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public TransformMethod[] EndGetTransformMethods(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((TransformMethod[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.solidopt.org/ws/SolidOptService.asmx/NewOptimization", RequestNamespace="http://www.solidopt.org/ws/SolidOptService.asmx", ResponseNamespace="http://www.solidopt.org/ws/SolidOptService.asmx", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void NewOptimization()
        {
            this.Invoke("NewOptimization", new object[0]);
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginNewOptimization(System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("NewOptimization", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public void EndNewOptimization(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.solidopt.org/ws/SolidOptService.asmx/AddOptimizationURI", RequestNamespace="http://www.solidopt.org/ws/SolidOptService.asmx", ResponseNamespace="http://www.solidopt.org/ws/SolidOptService.asmx", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AddOptimizationURI(string uri)
        {
            object[] results = this.Invoke("AddOptimizationURI", new object[] {
                        uri});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAddOptimizationURI(string uri, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("AddOptimizationURI", new object[] {
                        uri}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndAddOptimizationURI(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.solidopt.org/ws/SolidOptService.asmx/AddOptimizationFile", RequestNamespace="http://www.solidopt.org/ws/SolidOptService.asmx", ResponseNamespace="http://www.solidopt.org/ws/SolidOptService.asmx", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AddOptimizationFile([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] binary)
        {
            object[] results = this.Invoke("AddOptimizationFile", new object[] {
                        binary});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAddOptimizationFile(byte[] binary, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("AddOptimizationFile", new object[] {
                        binary}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndAddOptimizationFile(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.solidopt.org/ws/SolidOptService.asmx/SetOptimizationParams", RequestNamespace="http://www.solidopt.org/ws/SolidOptService.asmx", ResponseNamespace="http://www.solidopt.org/ws/SolidOptService.asmx", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SetOptimizationParams([System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] ConfigParam[] config)
        {
            object[] results = this.Invoke("SetOptimizationParams", new object[] {
                        config});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSetOptimizationParams(ConfigParam[] config, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("SetOptimizationParams", new object[] {
                        config}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndSetOptimizationParams(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.solidopt.org/ws/SolidOptService.asmx/Optimize", RequestNamespace="http://www.solidopt.org/ws/SolidOptService.asmx", ResponseNamespace="http://www.solidopt.org/ws/SolidOptService.asmx", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int Optimize()
        {
            object[] results = this.Invoke("Optimize", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginOptimize(System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("Optimize", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public int EndOptimize(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.solidopt.org/ws/SolidOptService.asmx/GetResultURI", RequestNamespace="http://www.solidopt.org/ws/SolidOptService.asmx", ResponseNamespace="http://www.solidopt.org/ws/SolidOptService.asmx", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetResultURI(int result)
        {
            object[] results = this.Invoke("GetResultURI", new object[] {
                        result});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetResultURI(int result, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetResultURI", new object[] {
                        result}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetResultURI(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("SharpDevelop", "3.0.0.3800")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.solidopt.org/ws/SolidOptService.asmx")]
    public partial class TransformMethod
    {
        
        /// <remarks/>
        public string Name;
        
        /// <remarks/>
        public string Caption;
        
        /// <remarks/>
        public string Version;
        
        /// <remarks/>
        public string Status;
        
        /// <remarks/>
        public string FullName;
        
        /// <remarks/>
        public string Description;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public ConfigParamDef[] ConfigParamsDef;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("SharpDevelop", "3.0.0.3800")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.solidopt.org/ws/SolidOptService.asmx")]
    public partial class ConfigParamDef
    {
        
        /// <remarks/>
        public string Name;
        
        /// <remarks/>
        public string Caption;
        
        /// <remarks/>
        public object Value;
        
        /// <remarks/>
        public object DefaultValue;
        
        /// <remarks/>
        public string Description;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("SharpDevelop", "3.0.0.3800")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.solidopt.org/ws/SolidOptService.asmx")]
    public partial class ConfigParam
    {
        
        /// <remarks/>
        public string Name;
        
        /// <remarks/>
        public object Value;
    }
}
